from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound
def run(environment):
    name = 'source/security/signup/rewrite.html'

    def root(context, environment=environment):
        parent_template = None
        if 0: yield None
        parent_template = environment.get_template('layouts/main-profile.html', 'source/security/signup/rewrite.html')
        for name, parent_block in parent_template.blocks.iteritems():
            context.blocks.setdefault(name, []).append(parent_block)
        for event in parent_template.root_render_func(context):
            yield event

    def block_content(context, environment=environment):
        l_ticket = context.resolve('ticket')
        l_link = context.resolve('link')
        l_lipsum = context.resolve('lipsum')
        if 0: yield None
        yield u'\n\n<div id=\'profileHeader\'>\n\t\n\t<div id=\'profileId\'>\n\t\t<div id=\'profileName\'><h1><span id=\'profileFirstname\'>John</span> <span id=\'profileLastname\'>Doe</span></h1><br /><span id=\'profileTagline\'>Title, Location</span></div>\n\t</div>\n\t\n</div>\n\n\n<div id="profileSlider">\n\n  <ul class="navigation">\n    <li><a href="#feed"><span class=\'iconButtonBox newsFeedButtonBox\'>Feed</span></a></li>\n    <li><a href="#stats"><span class=\'iconButtonBox statsButtonBox\'>Stats</span></a></li>\n    <li><a href="#documents"><span class=\'iconButtonBox contentButtonBox\'>Content</span></a></li>\n    <li><a href="#tags"><span class=\'iconButtonBox tagsButtonBox\'>Tags</span></a></li>\n  </ul>\n\n  <!-- element with overflow applied -->\n  <div class="scroll">\n    <div class="scrollContainer">\n      <div class="panel" id="feed">%s</div>\n      <div class="panel" id="stats">%s</div>\n      <div class="panel" id="documents">%s</div>\n      <div class="panel" id="tags">%s</div>\n    </div>\n  </div>\n\n  <div class=\'clearboth\'></div>\n\n</div>\n\n<!-- AJAX registration box -->\n<div class=\'hidden\' id=\'registrationFrame\'>\n\t<a class=\'registrationFramePanel\' title=\'Create Your Account\' id=\'introFrame\' rel=\'registration\' href="%s">Registration Intro</a>\n\t<a class=\'registrationFramePanel\'  title=\'Create Your Account: Basic Setup\' id=\'basicFrame\' rel=\'registration\' href="%s">Step 1: Basic Setup</a>\n\t<a class=\'registrationFramePanel\' title=\'Create Your Account: Profile Setup\' id=\'profileFrame\' rel=\'registration\' href="%s">Step 2: Profile</a>\n\t<a class=\'registrationFramePanel\' title=\'Create Your Account: Settings\' id=\'settingsFrame\' rel=\'registration\' href="%s">Step 3: Settings</a>\n</div>\n\n' % (
            context.call(l_lipsum, 1), 
            context.call(l_lipsum, 1), 
            context.call(l_lipsum, 1), 
            context.call(l_lipsum, 1), 
            context.call(l_link, 'auth/signup/frame', step='0', ticket=l_ticket), 
            context.call(l_link, 'auth/signup/frame', step=1, ticket=l_ticket), 
            context.call(l_link, 'auth/signup/frame', step=2, ticket=l_ticket), 
            context.call(l_link, 'auth/signup/frame', step=3, ticket=l_ticket), 
        )

    def block_sidebar_header(context, environment=environment):
        if 0: yield None
        yield u"<span class='iconButtonBox addUserButtonBox'>Create Your Account</span>"

    def block_postsouth(context, environment=environment):
        if 0: yield None
        yield u'\n\n<script src="/assets/js/static/jquery/jquery.scrollTo-1.4.2-min.js" type="text/javascript"></script>\n<script src="/assets/js/static/jquery/jquery.localscroll-1.2.7-min.js" type="text/javascript"></script>\n<script src="/assets/js/static/jquery/jquery.serialScroll-1.2.2-min.js" type="text/javascript"></script>\n\n<script type=\'text/javascript\'>\n\nformRpcResponse = null;\nrawFormRpcResponse = null;\nregistrationDialog = null;\ndisplayingError = false;\n\n\n// ====== Prepare panel loading procedure\n_PanelObj = {};\nfunction loadPanel(name, continue_url)\n{\n\t_PanelObj[\'current\'] = name;\n\t_PanelObj[\'continue\'] = continue_url;\n\t_PanelObj[\'contains_form\'] = false;\n}\nfunction displayError(message)\n{\n\tdisplayingError = true;\n\t$(\'.panelNotice\').html(\'<span class="iconButtonBox errorButtonBox">\'+message+\'</span>\').slideDown();\n}\nfunction hideError()\n{\n\t$(\'.panelNotice\').slideUp();\n}\nfunction readRPCResponse(response)\n{\n\trawFormRpcResponse = response;\n\tformRpcResponse = JSON.parse(response);\n\t\n\tif (formRpcResponse.result == \'success\')\n\t{\n\t\t$.fancybox.showActivity();\n\t\tif (typeof(formRpcResponse.response.dom_inserts) != undefined)\n\t\t{\n\t\t\t$.each(formRpcResponse.response.dom_inserts, function(i)\n\t\t\t{\n\t\t\t\tinsert = formRpcResponse.response.dom_inserts[i];\n\t\t\t\tif (insert.value == \'hide\')\n\t\t\t\t{\n\t\t\t\t\t$(\'#\'+insert.id).addClass(\'hidden\');\n\t\t\t\t}\n\t\t\t\telse if (insert.value == \'unhide\')\n\t\t\t\t{\n\t\t\t\t\t$(\'#\'+insert.id).removeClass(\'hidden\');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$(\'#\'+insert.id).html(insert.value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (displayingError == true)\n\t\t{\n\t\t\thideError();\n\t\t}\n\t\tadvanceOverlay();\n\t\t$.fancybox.hideActivity();\n\t}\n\telse\n\t{\n\t\t$.fancybox.hideActivity();\n\t\terror = formRpcResponse.errors[0];\n\t\tdisplayError(error.message);\n\t\t$(\'input#\'+error.field).animate({border:\'1px solid red !important\'});\n\t}\n}\nfunction registerForm(selector, href, method)\n{\n\t_PanelObj[\'contains_form\'] = true;\n\t_PanelObj[\'form_method\'] = method;\n\t_PanelObj[\'form_action\'] = href;\n\t_PanelObj[\'form_selector\'] = selector;\n\t\n\t$(selector).unbind(\'submit\').unbind("submit").bind("submit", function()\n\t{\n\t\t$.ajax({type: _PanelObj[\'form_method\'], cache: false, async:true, url: _PanelObj[\'form_action\'], data:$(selector).serializeArray(), success: function(data) {readResponse(response);}});\n\t});\n}\nfunction submitFrame()\n{\t\n\t// Submit AJAX Request\n\t$.ajax({\n\t\t\n\t\ttype: _PanelObj[\'form_method\'],\n\t\tcache: false,\n\t\tasync: true,\n\t\turl: _PanelObj[\'form_action\'],\n\t\tdata: $(_PanelObj[\'form_selector\']).serializeArray(),\n\t\tsuccess: function(data)\n\t\t{\n\t\t\treadRPCResponse(data);\n\t\t},\n\t\terror: function(data)\n\t\t{\n\t\t\talert(\'ajax failure: \'+data);\n\t\t}\n\t});\n}\nfunction advanceOverlay()\n{\n\t$.fancybox.next();\n}\nfunction nextAction()\n{\n\tif (_PanelObj[\'contains_form\'] == true)\n\t{\n\t\tsubmitFrame();\n\t}\n\telse\n\t{\n\t\tadvanceOverlay();\n\t}\n}\n\n// when the DOM is ready...\n$(document).ready(function () {\n\n// ===== Prepare registration dialog\ndialogOptions = {\n\n\ttype: \'ajax\',\n\tautoDimensions:false,\n\twidth:600,\n\tscrolling: \'no\',\n\ttitleShow: false,\n\topacity:true,\n\theight:300,\n\tpadding:0,\n\tmargin:0,\n\tshowNavArrows: false,\n\tmodal: true\n\t\n};\nregistrationDialog = $(".registrationFramePanel").fancybox(dialogOptions);\n$("#introFrame").click();\n\t\t\n\nvar $panels = $(\'#profileSlider .scrollContainer > div\');\nvar $container = $(\'#profileSlider .scrollContainer\');\n\n// if false, we\'ll float all the panels left and fix the width \n// of the container\nvar horizontal = false;\n\n// float the panels left if we\'re going horizontal\nif (horizontal) {\n  $panels.css({\n    \'float\' : \'left\',\n    \'position\' : \'relative\' // IE fix to ensure overflow is hidden\n  });\n  \n  // calculate a new width for the container (so it holds all panels)\n  $container.css(\'width\', $panels[0].offsetWidth * $panels.length);\n}\n\n// collect the scroll object, at the same time apply the hidden overflow\n// to remove the default scrollbars that will appear\nvar $scroll = $(\'#profileSlider .scroll\').css(\'overflow\', \'hidden\');\n\n// handle nav selection\nfunction selectNav() {\n  $(this)\n    .parents(\'ul:first\')\n      .find(\'a\')\n        .removeClass(\'selected\')\n      .end()\n    .end()\n    .addClass(\'selected\');\n}\n\n$(\'#profileSlider .navigation\').find(\'a\').click(selectNav);\n\n// go find the navigation link that has this target and select the nav\nfunction trigger(data) {\n  var el = $(\'#profileSlider .navigation\').find(\'a[href$="\' + data.id + \'"]\').get(0);\n  selectNav.call(el);\n}\n\nif (window.location.hash) {\n  trigger({ id : window.location.hash.substr(1) });\n} else {\n  $(\'ul.navigation a:first\').click();\n}\n\n// offset is used to move to *exactly* the right place, since I\'m using\n// padding on my example, I need to subtract the amount of padding to\n// the offset.  Try removing this to get a good idea of the effect\nvar offset = parseInt((horizontal ? \n  $container.css(\'paddingTop\') : \n  $container.css(\'paddingLeft\')) \n  || 0) * -1;\n\n\nvar scrollOptions = {\n  target: $scroll, // the element that has the overflow\n  \n  // can be a selector which will be relative to the target\n  items: $panels,\n  \n  navigation: \'.navigation a\',\n    \n  // allow the scroll effect to run both directions\n  axis: \'xy\',\n  \n  onAfter: trigger, // our final callback\n  \n  offset: offset,\n  \n  // duration of the sliding effect\n  duration: 500,\n  \n  // easing - can be used with the easing plugin: \n  // http://gsgd.co.uk/sandbox/jquery/easing/\n  easing: \'swing\'\n};\n\n// apply serialScroll to the slider - we chose this plugin because it \n// supports// the indexed next and previous scroll along with hooking \n// in to our navigation.\n$(\'#profileSlider\').serialScroll(scrollOptions);\n\n// now apply localScroll to hook any other arbitrary links to trigger \n// the effect\n$.localScroll(scrollOptions);\n\n// finally, if the URL has a hash, move the slider in to position, \n// setting the duration to 1 because I don\'t want it to scroll in the\n// very first page load.  We don\'t always need this, but it ensures\n// the positioning is absolutely spot on when the pages loads.\nscrollOptions.duration = 1;\n$.localScroll.hash(scrollOptions);\n\n});\n</script>\n'

    def block_sidebar_content(context, environment=environment):
        if 0: yield None
        yield u"\n<ul id='wizard_steps'>\n\t<li>\n\t\t\t<span><b>1. Account Information</b></span>\n\t\t\t<br /><p>Tell us a bit about who you are.</p>\n\t</li>\n\t<li>\n\t\t\t<span><b>2. Profile Picture</b></span>\n\t\t\t<br /><p>Upload a picture for all to see.</p>\n\t</li>\t\t\n\t<li>\n\t\t\t<span><b>3. Crop Profile Picture</b></span>\n\t\t\t<br /><p>Crop your profile picture to your liking.</p>\n\t</li>\t\n</ul>\n"

    def block_title(context, environment=environment):
        if 0: yield None
        yield u'Create Your Account'

    blocks = {'content': block_content, 'sidebar_header': block_sidebar_header, 'postsouth': block_postsouth, 'sidebar_content': block_sidebar_content, 'title': block_title}
    debug_info = '1=9&25=15&48=21&49=22&50=23&51=24&61=25&62=26&63=27&64=28&5=31&69=35&8=39&3=43'
    return locals()